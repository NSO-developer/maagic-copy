stages:
  - build

before_script:
  - if [ "$(which docker)" == "/usr/bin/docker" ]; then echo "Docker already installed"; else echo "Docker is not installed, installing..." && apt-get update && apt-get install -qy apt-transport-https ca-certificates curl expect gnupg2 software-properties-common sshpass xmlstarlet && curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add - && apt-key fingerprint 0EBFCD88 && add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/debian $(lsb_release -cs) stable" && apt-get update && apt-get install -qy docker-ce docker-ce-cli containerd.io; fi

.build:
  stage: build
  script:
    - if [ -n "${CI_DOCKER_USER}" ]; then echo "Using provided credentials for authentication with docker registry"; docker login -u ${CI_DOCKER_USER} -p ${CI_DOCKER_PASSWORD} ${CI_REGISTRY}; else docker login -u gitlab-ci-token -p ${CI_BUILD_TOKEN} ${CI_REGISTRY}; fi
    - echo "Building for NSO version ${NSO_VERSION}"
    - make build testenv-start testenv-test testenv-stop
    - echo "Using Gitlab CI token to authenticate with Docker registry for pushing image"
    - docker login -u gitlab-ci-token -p ${CI_JOB_TOKEN} ${CI_REGISTRY}
    - if [ "${DOCKER_PUSH}" != "false" ]; then make push; fi
    - if [ "${CI_COMMIT_REF_NAME}" = "master" ]; then make tag-release; fi
    - if [ "${CI_COMMIT_REF_NAME}" = "master" ] && [ "${DOCKER_PUSH}" != "false" ]; then make push-release; fi
  after_script:
    - make testenv-stop

# Include CI configuration file of NSO versions to build for from the upstream
# nso-docker repo. This is good for public packages as they will be tested
# across a range of NSO versions.
#
# Remove / comment in case you want to override for which NSO versions this
# project is built or point it to your own list of versions, which is useful if
# you want to keep it synchronized across multiple repositories.
include: 'https://gitlab.com/nso-developer/nso-docker/-/raw/master/version-includes/build-tot.yaml'

# Uncomment the following and modify the version to build for a specific NSO
# version.
#build-5.3.1:
#  extends: .build
#  variables:
#    NSO_VERSION: "5.3.1"
